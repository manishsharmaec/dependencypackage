apply plugin: 'maven-publish'


def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties"))) //Set env variable GPR_USER & GPR_API_KEY if not adding a properties file

def getArtificatId = { ->
    return "free"
}

def getGroupId = { ->
    return "com.mylib"
}

def getVersionName = { ->
    return "1.0.0"
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

afterEvaluate {
    publishing {
        repositories {
            maven {
                name = "GithubPackages"
                /** Configure path of your package repository on Github
                 ** Replace GITHUB_USERID with your/organisation Github userID
                 ** and REPOSITORY with the repository name on GitHub
                 */
                url = uri("https://maven.pkg.github.com/manishsharmaec/dependencypackage")
                credentials {
                    /** Create github.properties in root project folder file with
                     ** gpr.usr=GITHUB_USER_ID & gpr.key=PERSONAL_ACCESS_TOKEN
                     ** Set env variable GPR_USER & GPR_API_KEY if not adding a properties file**/

                    username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                    password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
                }
            }

            maven {
                name = 'CustomMavenRepo'
                url = "file://${buildDir}/repo"
            }
        }
        publications {
            release(MavenPublication) {
//                from components.release
                groupId getGroupId()
                artifactId getArtificatId()
                version getVersionName()
                artifact("$buildDir/outputs/aar/${getArtificatId()}-release.aar")
                artifact(sourceJar)


                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                    configurations.api.allDependencies.each {
                        def dependencyNode =
                                dependenciesNode.appendNode('dependency')
                                dependencyNode.appendNode('groupId', it.group)
                                dependencyNode.appendNode('artifactId', it.name)
                                dependencyNode.appendNode('version', it.version)
                    }
                }
            }

        }

    }
}
